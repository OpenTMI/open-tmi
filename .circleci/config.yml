version: 2
jobs:
  build:
    working_directory: ~/opentmi
    docker:
      - image: circleci/node:8.11.4-browsers
        environment:
          CHROME_BIN: "/usr/bin/google-chrome"
          NODE_ENV: test
          XUNIT_FILE: shippable/testresults/result.xml
      - image: circleci/mongo:4.1.3
        command: [mongod]
    steps:
      - checkout
      - restore_cache:
          key: dependency-cache-{{ checksum "package.json" }}
      - run:
          name: install mongotools
          command: |
            sudo apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv 9DA31620334BD75D9DCB49F368818C72E52529D4
            echo "deb [ arch=amd64,arm64 ] https://repo.mongodb.org/apt/ubuntu xenial/mongodb-org/4.0 multiverse" | sudo tee /etc/apt/sources.list.d/mongodb.list
            sudo apt-get update
            sudo apt install mongodb-org=4.0.1 mongodb-org-shell=4.0.1 mongodb-org-tools=4.0.1
      - run:
          name: versions
          command: |
            mongorestore --version
            node --version
            npm --version
      - run:
          name: prepare
          command: |
            sudo npm install -g grunt-cli
            mkdir -p shippable/testresults
            mkdir -p shippable/codecoverage
            mkdir junit
      - run:
          name: install-npm
          command: npm install
      - save_cache:
          key: dependency-cache-{{ checksum "package.json" }}
          paths:
            - ./node_modules
      - run:
          name: test
          command: |
            MOCHA_FILE=junit/unittests.xml grunt unittests --silent
            MOCHA_FILE=junit/apitests.xml grunt apitests --silent
            MOCHA_FILE=junit/clustertests.xml grunt clustertests --silent
      - run:
          name: lint
          command: npm run lint
          when: always
      - store_test_results:
          path: junit
      - store_test_results:
          path: coverage/coverage.json
      - store_artifacts:
          path: junit
      - store_artifacts:
          path: coverage
          prefix: coverage
      - store_artifacts:
          path: shippable/testresults
          prefix: testresults
      - store_artifacts:
          path: db.log
          prefix: mongolog
      - store_artifacts:
          path: log
          prefix: logs

name: Dockerimage

on:
  push:
    paths-ignore:
      - '**/*.md'
    branches:
      - master
  pull_request:
     paths-ignore:
      - '**/*.md'
  release:

jobs:
  build-and-publish-latest:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2 # Checking out the repo
      
      - name: build
        run: docker build . -t opentmi
      
      - name: resolve tag
        id: vars
        run: |
          # Strip git ref prefix from version
          VERSION=$(echo "${{ github.ref }}" | sed -e 's,.*/\(.*\),\1,')
          # Strip "v" prefix from tag name
          [[ "${{ github.ref }}" == "refs/tags/"* ]] && VERSION=$(echo $VERSION | sed -e 's/^v//')
          # Use Docker `latest` tag convention
          [ "$VERSION" == "master" ] && VERSION=latest
          echo ::set-output name=docker_tag::$(echo ${VERSION})
          echo tag=${VERSION}
          docker tag opentmi opentmi:${VERSION}
      
      - run: docker image ls
      
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: publish to dockerhub
        # if: github.event_name == 'push' || github.event_name == 'tag'
        run:
          docker push ghcr.io/opentmi/opentmi:${{ steps.vars.outputs.docker_tag }}
      
      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: publish to dockerhub
        # if: github.event_name == 'push' || github.event_name == 'tag'
        run:
          docker push opentmi:${{ steps.vars.outputs.docker_tag }}

      
